import{s as T}from"./index-CI2J1zHl.js";import{_ as z,u as L,r as w,k as j,w as G,o as h,a as e,c as D,e as P,t as m,d as E,F as M,l as V,v as R}from"./index-ChoxxlnD.js";import{a as k}from"./axios-DsPaXkF5.js";const W={setup(){const n=L(),l=w([]),p=w([]),r=w([]),x=w(""),I=async(t,a,s)=>{const i=t.target.files[0];if(i){const o=new FileReader;o.onload=async f=>{l.value[a][s]=f.target.result;const v=new FormData;v.append("file",i);try{if((await k.post("/api/check-font",v,{headers:{"Content-Type":"multipart/form-data"}})).data.isFont)if(s==="front"){const y=await k.post("/api/process-upload",v,{headers:{"Content-Type":"multipart/form-data"}});y.data.status==="success"?(U(y.data.detections[0].message,a),n.add({severity:"success",summary:"Upload Success",detail:"File uploaded and processed successfully!",life:3e3})):y.data.status==="warning"?(U(y.data.new_data,a),n.add({severity:"warn",summary:"Upload Warning",detail:"File uploaded with warnings. Please check!",life:3e3})):(_(a,s),n.add({severity:"error",summary:"Upload Error",detail:"Please select a clearer image for accurate information!",life:5e3}))}else _(a,s),n.add({severity:"error",summary:"Upload Error",detail:"Back image is not suitable, please choose another one!",life:5e3});else s==="front"&&(_(a,s),n.add({severity:"error",summary:"Upload Error",detail:"Please select a clearer image for accurate information!",life:5e3}))}catch(g){console.error("Error uploading file:",g),_(a,s),n.add({severity:"error",summary:"Upload Failed",detail:"Failed to upload the file. Please try again.",life:3e3})}},o.readAsDataURL(i)}},_=(t,a)=>{l.value[t][a]=null;const s=document.getElementById(`${a}-upload-${t}`);s&&(s.value="")},d=(t,a)=>t===a?'<span class="text-green-500">Match</span>':'<span class="text-red-500">Not Match</span>',c=()=>{let t=!0;for(let a=0;a<l.value.length;a++){const s=l.value[a];(!s.front||!s.back)&&(t=!1,n.add({severity:"warn",summary:"Incomplete Uploads",detail:`Please upload both front and back images for ${s.type} ${a+1}.`,life:5e3}))}t&&n.add({severity:"success",summary:"All Good",detail:"All images are uploaded. You can now proceed.",life:3e3})},u=t=>{const{insured:a,buyer:s,dependents:i}=t;p.value=[{...a,type:"Insured"},{...s,type:"Buyer"},...i.map(o=>({...o,type:"Dependent"}))],l.value=[{...a,type:"Insured",front:null,back:null},{...s,type:"Buyer",front:null,back:null},...i.map(o=>({...o,type:"Dependent",front:null,back:null}))],r.value=l.value.map(o=>{var f;return{NationalID:{oldData:o.nationalID,newData:""},CitizenID:{oldData:o.citizenID,newData:""},DateOfBirth:{oldData:b(o.dateOfBirth),newData:""},FullName:{oldData:o.fullName,newData:""},Address:{oldData:o.address,newData:""},Gender:{oldData:((f=o.gender)==null?void 0:f.name)||"",newData:""}}})},b=t=>{if(!t||t.length!==8)return t;const a=t.slice(0,2),s=t.slice(2,4),i=t.slice(4);return`${a}/${s}/${i}`},U=(t,a)=>{var o,f,v,g,y,C,N,B;const s=l.value[a],i={NationalID:{oldData:((o=p.value[a])==null?void 0:o.nationalID)||"",newData:t.id_identity_card||s.nationalID},CitizenID:{oldData:((f=p.value[a])==null?void 0:f.citizenID)||"",newData:t.id_passport||s.citizenID},DateOfBirth:{oldData:((v=p.value[a])==null?void 0:v.dateOfBirth)||"",newData:b(t.birth_date)||s.dateOfBirth},FullName:{oldData:((g=p.value[a])==null?void 0:g.fullName)||"",newData:t.fullname||s.fullName},Address:{oldData:((y=p.value[a])==null?void 0:y.address)||"",newData:t.address||s.address},Gender:{oldData:((N=(C=p.value[a])==null?void 0:C.gender)==null?void 0:N.name)||"",newData:t.gender||((B=s.gender)==null?void 0:B.name)||""}};r.value[a]=i},A=async()=>{const t=l.value.map((a,s)=>{const i=p.value.find(f=>f.id===a.id)||{},o=r.value[s].newData||{};return{id:a.id,front:a.front,back:a.back,...i,...o}});try{(await k.post(`/v4/api/fortest/${F}`,{updatedData:t,notes:x.value})).data.status==="success"?n.add({severity:"success",summary:"Update Success",detail:"Data updated successfully!",life:3e3}):n.add({severity:"warn",summary:"Update Warning",detail:"Data update with warnings. Please check!",life:3e3})}catch(a){console.error("Error updating data:",a),n.add({severity:"error",summary:"Update Failed",detail:"Failed to update data. Please try again.",life:3e3})}},O=async t=>{try{if(!t)n.add({severity:"warn",summary:"Missing ID",detail:"CMI_ID is missing. Please provide a valid ID.",life:3e3});else{const a=await k.get(`/v4/api/fortest/${t}`);u(a.data)}}catch(a){console.error("Failed to load buyer:",a),n.add({severity:"error",summary:"Data Load Error",detail:"Failed to load data. Please try again later.",life:3e3})}},F=sessionStorage.getItem("CMI_ID");return F&&O(F),{people:l,comparisonData:r,notes:x,handleUpload:I,compareFields:d,validateUploads:c,sendUpdatedData:A}}},H={class:"flex flex-col gap-8"},$={class:"card flex-1 flex flex-col gap-4 p-4"},S={class:"font-semibold text-xl"},Y={class:"font-semibold text-xl"},q={class:"grid grid-cols-2 gap-4"},J={class:"flex flex-col gap-2"},K=["for"],Q=["id","onChange"],X={class:"flex flex-col gap-2"},Z=["for"],aa=["id","onChange"],ea={class:"flex items-center justify-center"},ta={key:0,class:"w-full h-auto"},sa=["src"],oa={class:"flex items-center justify-center"},la={key:0,class:"w-full h-auto"},ra=["src"],da={class:"card flex-1 flex flex-col gap-4 p-4"},na={class:"font-semibold text-xl"},ca={class:"min-w-full mt-4 border-separate border-spacing-2 border border-gray-300"},ia=e("thead",null,[e("tr",null,[e("th",{class:"border border-gray-400 px-4 py-2"},"Field"),e("th",{class:"border border-gray-400 px-4 py-2"},"Old Data"),e("th",{class:"border border-gray-400 px-4 py-2"},"New Data"),e("th",{class:"border border-gray-400 px-4 py-2"},"Comparison")])],-1),ua={class:"border border-gray-300 px-4 py-2"},pa={class:"border border-gray-300 px-4 py-2"},fa={class:"border border-gray-300 px-4 py-2"},ma=["innerHTML"],ya={class:"card flex flex-col gap-4 p-4"},ha=e("div",{class:"font-semibold text-xl"},"Notes",-1),_a={class:"flex flex-col gap-2"},va=e("label",{for:"notes",class:"font-medium"},"Notes",-1),Da={class:"card flex flex-col gap-4 p-4"};function ba(n,l,p,r,x,I){const _=T;return h(),j(_,null,{default:G(()=>[e("div",H,[(h(!0),D(M,null,P(r.people,(d,c)=>(h(),D("div",{key:c,class:"flex flex-col md:flex-row gap-8 mb-8"},[e("div",$,[e("div",S,m(c+1)+". Upload ID Cards for "+m(d.type),1),e("div",Y,m(d.fullName),1),e("div",q,[e("div",J,[e("label",{for:"front-upload-"+c,class:"font-medium"},"Upload Front Side",8,K),e("input",{id:"front-upload-"+c,type:"file",accept:"image/*",onChange:u=>r.handleUpload(u,c,"front"),class:"border rounded p-2"},null,40,Q)]),e("div",X,[e("label",{for:"back-upload-"+c,class:"font-medium"},"Upload Back Side",8,Z),e("input",{id:"back-upload-"+c,type:"file",accept:"image/*",onChange:u=>r.handleUpload(u,c,"back"),class:"border rounded p-2"},null,40,aa)]),e("div",ea,[d.front?(h(),D("div",ta,[e("img",{src:d.front,width:"250",class:"object-cover border rounded"},null,8,sa)])):E("",!0)]),e("div",oa,[d.back?(h(),D("div",la,[e("img",{src:d.back,width:"250",class:"object-cover border rounded"},null,8,ra)])):E("",!0)])])]),e("div",da,[e("div",na,"Compare Data for "+m(d.type)+" "+m(c+1),1),e("table",ca,[ia,e("tbody",null,[(h(!0),D(M,null,P(r.comparisonData[c],(u,b)=>(h(),D("tr",{key:b},[e("td",ua,m(b),1),e("td",pa,m(u.oldData),1),e("td",fa,m(u.newData),1),e("td",{class:"border border-gray-300 px-4 py-2",innerHTML:r.compareFields(u.oldData,u.newData)},null,8,ma)]))),128))])])])]))),128)),e("div",ya,[ha,e("div",_a,[va,V(e("textarea",{id:"notes",rows:"6","onUpdate:modelValue":l[0]||(l[0]=d=>r.notes=d),placeholder:"Add any additional notes here",class:"border rounded p-2"},null,512),[[R,r.notes]])])]),e("div",Da,[e("button",{onClick:l[1]||(l[1]=(...d)=>r.validateUploads&&r.validateUploads(...d)),class:"btn btn-primary"},"Cập nhật"),e("button",{onClick:l[2]||(l[2]=(...d)=>r.sendUpdatedData&&r.sendUpdatedData(...d)),class:"btn btn-success"},"Gửi Cập Nhật")])])]),_:1})}const xa=z(W,[["render",ba]]);export{xa as default};
