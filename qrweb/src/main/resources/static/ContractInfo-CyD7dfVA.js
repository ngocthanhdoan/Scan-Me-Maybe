import{s as L}from"./index-DoAXy0H8.js";import{_ as O,u as z,r as w,k as j,w as G,o as D,a as t,c as b,e as P,t as y,d as E,F as M,l as V,v as R}from"./index-DYV7uzLV.js";import{a as k}from"./axios-DsPaXkF5.js";const W={setup(){const n=z(),l=w([]),p=w([]),r=w([]),F=w(""),x=async(s,e,a)=>{const i=s.target.files[0];if(i){const o=new FileReader;o.onload=async f=>{l.value[e][a]=f.target.result;const m=new FormData;m.append("file",i);try{if((await k.post("/api/check-font",m,{headers:{"Content-Type":"multipart/form-data"}})).data.isFont)if(a==="front"){const _=await k.post("/api/process-upload",m,{headers:{"Content-Type":"multipart/form-data"}});_.data.status==="success"?(I(_.data.detections[0].message,e),n.add({severity:"success",summary:"Upload Success",detail:"File uploaded and processed successfully!",life:3e3})):_.data.status==="warning"?(I(_.data.new_data,e),n.add({severity:"warn",summary:"Upload Warning",detail:"File uploaded with warnings. Please check!",life:3e3})):(v(e,a),n.add({severity:"error",summary:"Upload Error",detail:"Please select a clearer image for accurate information!",life:5e3}))}else v(e,a),n.add({severity:"error",summary:"Upload Error",detail:"Back image is not suitable, please choose another one!",life:5e3});else a==="front"&&(v(e,a),n.add({severity:"error",summary:"Upload Error",detail:"Please select a clearer image for accurate information!",life:5e3}))}catch(h){console.error("Error uploading file:",h),v(e,a),n.add({severity:"error",summary:"Upload Failed",detail:"Failed to upload the file. Please try again.",life:3e3})}},o.readAsDataURL(i)}},v=(s,e)=>{l.value[s][e]=null;const a=document.getElementById(`${e}-upload-${s}`);a&&(a.value="")},d=(s,e)=>s===e?'<span class="text-green-500">Match</span>':'<span class="text-red-500">Not Match</span>',c=()=>{let s=!0;for(let e=0;e<l.value.length;e++){const a=l.value[e];(!a.front||!a.back)&&(s=!1,n.add({severity:"warn",summary:"Incomplete Uploads",detail:`Please upload both front and back images for ${a.type} ${e+1}.`,life:5e3}))}s&&n.add({severity:"success",summary:"All Good",detail:"All images are uploaded. You can now proceed.",life:3e3})},u=s=>{const{insured:e,buyer:a,dependents:i}=s;p.value=[{...e,type:"Insured"},{...a,type:"Buyer"},...i.map(o=>({...o,type:"Dependent"}))],l.value=[{...e,type:"Insured",front:null,back:null},{...a,type:"Buyer",front:null,back:null},...i.map(o=>({...o,type:"Dependent",front:null,back:null}))],r.value=l.value.map(o=>{var f;return{NationalID:{oldData:o.nationalID,newData:""},CitizenID:{oldData:o.citizenID,newData:""},DateOfBirth:{oldData:g(o.dateOfBirth),newData:""},FullName:{oldData:o.fullName,newData:""},Address:{oldData:o.address,newData:""},Gender:{oldData:((f=o.gender)==null?void 0:f.name)||"",newData:""}}})},g=s=>{if(!s||s.length!==8)return s;const e=s.slice(0,2),a=s.slice(2,4),i=s.slice(4);return`${e}/${a}/${i}`},I=(s,e)=>{var o,f,m,h,_,C,N,B;const a=l.value[e],i={NationalID:{oldData:((o=p.value[e])==null?void 0:o.nationalID)||"",newData:s.id_identity_card||a.nationalID},CitizenID:{oldData:((f=p.value[e])==null?void 0:f.citizenID)||"",newData:s.id_passport||a.citizenID},DateOfBirth:{oldData:((m=p.value[e])==null?void 0:m.dateOfBirth)||"",newData:g(s.birth_date)||a.dateOfBirth},FullName:{oldData:((h=p.value[e])==null?void 0:h.fullName)||"",newData:s.fullname||a.fullName},Address:{oldData:((_=p.value[e])==null?void 0:_.address)||"",newData:s.address||a.address},Gender:{oldData:((N=(C=p.value[e])==null?void 0:C.gender)==null?void 0:N.name)||"",newData:s.gender||((B=a.gender)==null?void 0:B.name)||""}};r.value[e]=i},A=async()=>{const s=l.value.map((a,i)=>{var m;const f={...p.value.find(h=>h.id===a.id)||{},...(m=r.value[i])==null?void 0:m.newData};return{id:a.id,[a.type.toLowerCase()]:f}}),e={insured:s.find(a=>a.insured),buyer:s.find(a=>a.buyer),dependents:s.filter(a=>a.dependents).map(a=>a.dependents).flat()};try{(await k.post("/v1/api/DataForTesting",{updatedData:e,notes:F.value})).data.status==="success"?n.add({severity:"success",summary:"Update Success",detail:"Data updated successfully!",life:3e3}):n.add({severity:"warn",summary:"Update Warning",detail:"Data update with warnings. Please check!",life:3e3})}catch(a){console.error("Error updating data:",a),n.add({severity:"error",summary:"Update Failed",detail:"Failed to update data. Please try again.",life:3e3})}},T=async s=>{try{if(!s)n.add({severity:"warn",summary:"Missing ID",detail:"CMI_ID is missing. Please provide a valid ID.",life:3e3});else{const e=await k.get(`/v4/api/fortest/${s}`);u(e.data)}}catch(e){console.error("Failed to load buyer:",e),n.add({severity:"error",summary:"Data Load Error",detail:"Failed to load data. Please try again later.",life:3e3})}},U=sessionStorage.getItem("CMI_ID");return U&&T(U),{people:l,comparisonData:r,notes:F,handleUpload:x,compareFields:d,validateUploads:c,sendUpdatedData:A}}},H={class:"flex flex-col gap-8"},S={class:"card flex-1 flex flex-col gap-4 p-4"},Y={class:"font-semibold text-xl"},$={class:"font-semibold text-xl"},q={class:"grid grid-cols-2 gap-4"},J={class:"flex flex-col gap-2"},K=["for"],Q=["id","onChange"],X={class:"flex flex-col gap-2"},Z=["for"],aa=["id","onChange"],ea={class:"flex items-center justify-center"},ta={key:0,class:"w-full h-auto"},sa=["src"],oa={class:"flex items-center justify-center"},la={key:0,class:"w-full h-auto"},ra=["src"],da={class:"card flex-1 flex flex-col gap-4 p-4"},na={class:"font-semibold text-xl"},ca={class:"min-w-full mt-4 border-separate border-spacing-2 border border-gray-300"},ia=t("thead",null,[t("tr",null,[t("th",{class:"border border-gray-400 px-4 py-2"},"Field"),t("th",{class:"border border-gray-400 px-4 py-2"},"Old Data"),t("th",{class:"border border-gray-400 px-4 py-2"},"New Data"),t("th",{class:"border border-gray-400 px-4 py-2"},"Comparison")])],-1),ua={class:"border border-gray-300 px-4 py-2"},pa={class:"border border-gray-300 px-4 py-2"},fa={class:"border border-gray-300 px-4 py-2"},ma=["innerHTML"],ya={class:"card flex flex-col gap-4 p-4"},ha=t("div",{class:"font-semibold text-xl"},"Notes",-1),_a={class:"flex flex-col gap-2"},Da=t("label",{for:"notes",class:"font-medium"},"Notes",-1),va={class:"card flex flex-col gap-4 p-4"};function ba(n,l,p,r,F,x){const v=L;return D(),j(v,null,{default:G(()=>[t("div",H,[(D(!0),b(M,null,P(r.people,(d,c)=>(D(),b("div",{key:c,class:"flex flex-col md:flex-row gap-8 mb-8"},[t("div",S,[t("div",Y,y(c+1)+". Upload ID Cards for "+y(d.type),1),t("div",$,y(d.fullName),1),t("div",q,[t("div",J,[t("label",{for:"front-upload-"+c,class:"font-medium"},"Upload Front Side",8,K),t("input",{id:"front-upload-"+c,type:"file",accept:"image/*",onChange:u=>r.handleUpload(u,c,"front"),class:"border rounded p-2"},null,40,Q)]),t("div",X,[t("label",{for:"back-upload-"+c,class:"font-medium"},"Upload Back Side",8,Z),t("input",{id:"back-upload-"+c,type:"file",accept:"image/*",onChange:u=>r.handleUpload(u,c,"back"),class:"border rounded p-2"},null,40,aa)]),t("div",ea,[d.front?(D(),b("div",ta,[t("img",{src:d.front,width:"250",class:"object-cover border rounded"},null,8,sa)])):E("",!0)]),t("div",oa,[d.back?(D(),b("div",la,[t("img",{src:d.back,width:"250",class:"object-cover border rounded"},null,8,ra)])):E("",!0)])])]),t("div",da,[t("div",na,"Compare Data for "+y(d.type)+" "+y(c+1),1),t("table",ca,[ia,t("tbody",null,[(D(!0),b(M,null,P(r.comparisonData[c],(u,g)=>(D(),b("tr",{key:g},[t("td",ua,y(g),1),t("td",pa,y(u.oldData),1),t("td",fa,y(u.newData),1),t("td",{class:"border border-gray-300 px-4 py-2",innerHTML:r.compareFields(u.oldData,u.newData)},null,8,ma)]))),128))])])])]))),128)),t("div",ya,[ha,t("div",_a,[Da,V(t("textarea",{id:"notes",rows:"6","onUpdate:modelValue":l[0]||(l[0]=d=>r.notes=d),placeholder:"Add any additional notes here",class:"border rounded p-2"},null,512),[[R,r.notes]])])]),t("div",va,[t("button",{onClick:l[1]||(l[1]=(...d)=>r.validateUploads&&r.validateUploads(...d)),class:"btn btn-primary"},"Cập nhật"),t("button",{onClick:l[2]||(l[2]=(...d)=>r.sendUpdatedData&&r.sendUpdatedData(...d)),class:"btn btn-success"},"Gửi Cập Nhật")])])]),_:1})}const Fa=O(W,[["render",ba]]);export{Fa as default};
